
package gui.profe;

import gui.profe.data.VentaLineaDatas;
import entities.Producto;
import entities.ProductoProfe;
import entities.Venta;
import entities.VentaLineaProfe;
import entities.VentaProfe;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;

public class AddDelProductPanel extends javax.swing.JPanel {

    private JPanel ifr;
    private JTable tabla;
    private VentaLineasTableModel mtdc;
    private int indexFila = -1;
    private CeldaAccionEditor cae;

    public AddDelProductPanel(JPanel ifr) {
        initComponents();
        this.ifr = ifr;

    }

    public void setCeldaEditor(CeldaAccionEditor cae) {
        this.cae = cae;
    }

    public void setTabla(JTable tabla) {
        this.tabla = tabla;
        mtdc = (VentaLineasTableModel) this.tabla.getModel();
    }

    public void setIndexFila(int fila) {
        this.indexFila = fila;
    }

    /**
     * Creates new form AddDelProductPanel
     */
    public AddDelProductPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/agregar.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/eliminar.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.out.println("add");
        if (this.tabla.getSelectedRow() != -1) {
            this.indexFila = this.tabla.getSelectedRow();
            System.err.println("add " + this.indexFila);
        }
        //if (((VentasPanel) this.ifr).isEsActualizacion()) {
        //    System.out.println("isEsActualizacion  true ");
        //}

        VentasPanel cp = ((VentasPanel) this.ifr);
        VentaProfe ventaSelected = cp.getVentaSelected();
        if (ventaSelected != null) {
            BuscarProductoPanel mov = new BuscarProductoPanel(ventaSelected);
            // mov.setCompraSelected(compraSelected);
            //mov.getCompraSelected().getEsdolares()
            JOptionPane.showOptionDialog(null, mov,
                    "Elija un producto ",
                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{}, null);

            ProductoProfe pSelected = mov.getProducto();
            if (pSelected != null) {
                System.err.println("Producto seleccionado " + pSelected.getNombre());
                VentaLineaProfe d = ((VentaLineaProfe) mtdc.getRow(this.indexFila));
                d.setVenta_id(ventaSelected.getId());
                d.setProd_id(pSelected.getId());
                d.setDescripcion(pSelected.getNombre());
                d.setPrecio(pSelected.getPrecio());
                d.setCant(1);
                d.setSubtotal(pSelected.getPrecio() * d.getCant());
                if (d.getId() > 0) {
                    VentaLineaDatas.update(d);
                } else {
                    int idx = VentaLineaDatas.create(d);
                    d.setId(idx);
                    d.setActivo(1);
                }
                
                this.tabla.changeSelection(this.indexFila, 1, true, false);
                // mtdc.contarItems();
                cae.lanzarDetencionEdicion();
                
                if (this.indexFila == this.tabla.getRowCount() - 1 ) {
       
                mtdc.addRow(new VentaLineaProfe());
   
            }
                

            } else {
                System.err.println("Producto NO seleccionado ");
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (this.tabla.getSelectedRow() != -1) {
            this.indexFila = this.tabla.getSelectedRow();
        }
        VentaLineaProfe d = ((VentaLineaProfe) mtdc.getRow(this.indexFila));
        if (this.tabla.getRowCount() > 1) {
            if (this.indexFila < this.tabla.getRowCount() - 1) {
                int opc = JOptionPane.showConfirmDialog(ifr, "¿Realmente desea eliminar?", "Quitar", JOptionPane.YES_NO_OPTION);
                if (opc == JOptionPane.OK_OPTION) {

                    if (d != null) {
                        try {
                            int opcion = VentaLineaDatas.delete(d.getId());
                            if (opcion != 0) {
                                mtdc.removeRow(this.indexFila);
                                System.out.println("removeRow fila " + this.indexFila);
                            }
                        } catch (Exception ex) {

                        }

                    } else {
                        System.err.println("no se encontró el detalle en la db fila " + this.indexFila);
                    }

                    // mtdc.contarItems();
                    cae.lanzarDetencionEdicion();
                    return;
                }
            }
        }
        
        
        if ((this.indexFila == 0 && this.tabla.getRowCount() == 1) || (this.indexFila == this.tabla.getRowCount() - 1 && this.tabla.getRowCount() > 1)) {
            int opc = JOptionPane.showConfirmDialog(ifr, "¿Realmente desea eliminar?, no conteste o es igual", "Quitar", JOptionPane.YES_NO_OPTION);
            if (opc == JOptionPane.OK_OPTION) {
                //d.setIdProducto(new Producto());
                //mtdc.remplazarProducto(new Producto(), indexFila);    
                //mtdc.contarItems();
                System.out.println("remplazarProducto en fila " + this.indexFila);
                cae.lanzarDetencionEdicion();
                return;
            }
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
